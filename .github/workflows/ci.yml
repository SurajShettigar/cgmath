# Workflow to build and test on Windows, Linux and macOS platforms when pushed or creating a pull request to main.
name: CI

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        build_type: [ Release ]
        c_compiler: [ gcc, clang, cl ]
        double_precision: [ ON, OFF ]
        use_simd: [ ON, OFF ]
        simd_arch: [ AVX2, SSE4_2 ]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: macos-latest
            build_type: Release
            c_compiler: clang
            cpp_compiler: clang++
            double_precision: ON
            use_simd: OFF
            simd_arch: SSE4_2
          - os: macos-latest
            build_type: Release
            c_compiler: clang
            cpp_compiler: clang++
            double_precision: OFF
            use_simd: ON
            simd_arch: SSE4_2
        exclude:
          - double_precision: OFF
            simd_arch: SSE4_2
          - use_simd: OFF
            simd_arch: SSE4_2
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: gcc
          - os: macos-latest
            c_compiler: cl
          - os: macos-latest
            simd_arch: AVX2

    steps:
      - uses: actions/checkout@v3

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DDOUBLE_PRECISION=${{ matrix.double_precision }}
          -DSIMD_INTRINSICS=${{ matrix.use_simd }}
          -DSIMD_ARCH=${{ matrix.simd_arch }}
          -DBENCHMARK_ENABLE_TESTING:BOOL=OFF 
          -DBENCHMARK_INSTALL_DOCS:BOOL=OFF 
          -DBENCHMARK_USE_BUNDLED_GTEST:BOOL=OFF 
          -DBUILD_GMOCK:BOOL=OFF 
          -DBENCHMARK_ENABLE_GTEST_TESTS:BOOL=OFF
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }} --target cgmath cgmath_test

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: ctest --verbose --build-config ${{ matrix.build_type }}
